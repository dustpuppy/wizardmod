package thewizardmod.fluids;

import javax.annotation.Nullable;

import net.minecraft.inventory.InventoryBasic;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.network.NetworkManager;
import net.minecraft.network.play.server.SPacketUpdateTileEntity;
import net.minecraftforge.fluids.Fluid;
import net.minecraftforge.fluids.FluidStack;
import net.minecraftforge.fluids.capability.TileFluidHandler;

public class TileEntityTank extends TileFluidHandler{
	
	public static final int CAPACITY = 11 * Fluid.BUCKET_VOLUME;

	public InventoryBasic inventory;
	
	public TileEntityTank() {
		tank = new FluidTankWithTile(this, CAPACITY);
		tank.setFluid(new FluidStack(StartupCommon.fluidMagic, 1));
		
		inventory = new InventoryBasic("tankInventory", false, 2);
	}

	@Override
	public NBTTagCompound writeToNBT(NBTTagCompound compound) {
		
		NBTTagList list = new NBTTagList();
		for(int i = 0; i < inventory.getSizeInventory(); i++)
		{
			if(inventory.getStackInSlot(i) != null)
			{
				NBTTagCompound tag = new NBTTagCompound();
				tag.setByte("slot", (byte)i);
				inventory.getStackInSlot(i).writeToNBT(tag);
				list.appendTag(tag);
			}
		}
		compound.setTag("itemStacks", list);
		
		return super.writeToNBT(compound);
	}

	@Override
	public void readFromNBT(NBTTagCompound compound) {
		super.readFromNBT(compound);
		
		NBTTagList list = compound.getTagList("itemStacks", 10);
		this.inventory = new InventoryBasic("tankInventory", false, 1);
		for(int i = 0; i < list.tagCount(); i++)
		{
			NBTTagCompound tag = list.getCompoundTagAt(i);
			byte b = tag.getByte("slot");
			if(b >=0 && b < inventory.getSizeInventory())
			{
				inventory.setInventorySlotContents(b, ItemStack.loadItemStackFromNBT(tag));
			}
		}
	}
	
	
	@Override
	public NBTTagCompound getUpdateTag() {
		return writeToNBT(new NBTTagCompound());
	}

	@Nullable
	@Override
	public SPacketUpdateTileEntity getUpdatePacket() {
		return new SPacketUpdateTileEntity(getPos(), 0, getUpdateTag());
	}

	@Override
	public void onDataPacket(NetworkManager net, SPacketUpdateTileEntity pkt) {
		readFromNBT(pkt.getNbtCompound());
	}

}