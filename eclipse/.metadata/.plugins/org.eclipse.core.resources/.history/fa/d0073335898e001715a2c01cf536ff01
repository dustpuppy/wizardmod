package thewizardmod.Crafting;

import java.util.Arrays;

import thewizardmod.Wands.StartupCommon;

import net.minecraft.init.Items;
import net.minecraft.inventory.InventoryCrafting;
import net.minecraft.item.Item;
import net.minecraft.item.ItemSeeds;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.IRecipe;
import net.minecraft.world.World;

public class CraftingRecipe implements IRecipe{


	public static int size = 16; 
	public static int matchingResult;
	public static Item result[] = {StartupCommon.woodenWand,StartupCommon.goldenWand};

	public static Item itemList[][] ={
		{	null,        null,        null,        thewizardmod.Tree.StartupCommon.itemCherryLog, 
			null,        null,        thewizardmod.Tree.StartupCommon.itemCherryLog, null,        
			null,        thewizardmod.Tree.StartupCommon.itemCherryLog, null,        null,        
			thewizardmod.Tree.StartupCommon.itemCherryLog, null,        null,        null			},
				
		{	null,        null,        null,        Items.GOLD_NUGGET, 
			null,        null,        Items.GOLD_NUGGET, null,        
			null,        Items.GOLD_NUGGET, null,        null,        
			Items.GOLD_NUGGET, null,        null,        null			},
					
					
		};
	
	public static Item dummyList[] = {
			null, null, null, null,
			null, null, null, null,
			null, null, null, null,
			null, null, null, null
	};
	
	
	public boolean matches(InventoryCrafting craftMatrix, World worldIn) {
		if (craftMatrix.getSizeInventory() != size){
			return false;
		}
		for(int j = 0; j < itemList.length; j++)
		{
			for(int i = 0; i < craftMatrix.getSizeInventory(); i++){
				dummyList[i] = null;
				if(craftMatrix.getStackInSlot(i) != null){
					dummyList[i] = craftMatrix.getStackInSlot(i).getItem();
				}
			}

			if(Arrays.equals(itemList[j], dummyList)){
				matchingResult = j;
				return true;
			}
		}
		matchingResult = -1;
		return false;
		
	}

	public ItemStack getCraftingResult(InventoryCrafting craftMatrix) {
		if(matchingResult > -1)
		{
			return new ItemStack(result[matchingResult]);
		}
		return null;
	}

	public int getRecipeSize() {
		return size;
	}

	public ItemStack getRecipeOutput() {
		if(matchingResult > -1)
		{
			return new ItemStack(result[matchingResult]);
		}
		return null;
	}

	public ItemStack[] getRemainingItems(InventoryCrafting inv) {
		ItemStack[] aitemstack = new ItemStack[inv.getSizeInventory()];

		for (int i = 0; i < aitemstack.length; ++i)
		{
			ItemStack itemstack = inv.getStackInSlot(i);
			aitemstack[i] = net.minecraftforge.common.ForgeHooks.getContainerItem(itemstack);
		}

		return aitemstack;
	}

}
