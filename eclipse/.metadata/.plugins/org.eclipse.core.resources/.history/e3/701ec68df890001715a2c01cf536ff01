package thewizardmod.runeSlab;



import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.VertexBuffer;
import net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer;
import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
import net.minecraft.util.ResourceLocation;



public class RendererRuneSlab extends TileEntitySpecialRenderer<TileEntityRuneSlab>{

	private static final ResourceLocation texture = new ResourceLocation("thewizardmod:textures/runes/1.png");

	@Override
	public void renderTileEntityAt(TileEntityRuneSlab te, double x, double y, double z, float partialTicks, int destroyStage) {
		super.renderTileEntityAt(te, x, y, z, partialTicks, destroyStage);
		GlStateManager.pushMatrix();
		{

			int r = 1 - 1;
			int g = 1 - 1;
			int b = 1 - 1;

			float PBX = OpenGlHelper.lastBrightnessX;
			float PBY = OpenGlHelper.lastBrightnessX;
			int PBT = OpenGlHelper.lightmapTexUnit;

			GlStateManager.translate(x, y, z);
			// GlStateManager.scale(0.25F, 0.25F, 0.25F);
			GlStateManager.rotate(90F, 1.0F, 0.0F, 0.0F);
			GlStateManager.translate(0, 0.5F, 0);

			Tessellator wrt = Tessellator.getInstance();
			VertexBuffer wr = wrt.getBuffer();
			this.bindTexture(texture); 
			GlStateManager.disableLighting();
//			GlStateManager.disableTexture2D();
			OpenGlHelper.setLightmapTextureCoords(1, 240, 240);
//			OpenGlHelper.setLightmapTextureCoords(1, 16.0F, 16.0F);
			wr.begin(7, DefaultVertexFormats.POSITION_COLOR);
			wr.pos(0, 0, 0).color(r, g, b, 255).endVertex();
			wr.pos(1, 0, 0).color(r, g, b, 255).endVertex();
			wr.pos(1, 1, 0).color(r, g, b, 255).endVertex();
			wr.pos(0, 1, 0).color(r, g, b, 255).endVertex();

			wrt.draw();

			wr.begin(7, DefaultVertexFormats.POSITION_COLOR);
			wr.pos(0, 0, 0).color(r, g, b, 255).endVertex();
			wr.pos(0, 1, 0).color(r, g, b, 255).endVertex();
			wr.pos(1, 1, 0).color(r, g, b, 255).endVertex();
			wr.pos(1, 0, 0).color(r, g, b, 255).endVertex();

			wrt.draw();

			GlStateManager.enableLighting();
//			GlStateManager.enableTexture2D();
//			OpenGlHelper.setLightmapTextureCoords(PBT, PBX, PBY);

		}
		GlStateManager.popMatrix();
	}

}
