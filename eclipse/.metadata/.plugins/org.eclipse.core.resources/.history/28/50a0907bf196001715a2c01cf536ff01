package thewizardmod.fluids;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.Container;
import net.minecraft.inventory.IInventory;
import net.minecraft.inventory.Slot;
import net.minecraft.item.ItemStack;

public class ContainerTank extends Container {

	public int slotSize = 2;
	public ContainerTank(IInventory playerInv, TileEntityTank tank) {
		int i = -18;
		int j;
		int k;

		int index = 0;
		addSlotToContainer(new Slot(tank.inventory, index++, 26, 19));
		addSlotToContainer(new Slot(tank.inventory, index++, 26, 55));

		for (j = 0; j < 3; ++j) {
			for (k = 0; k < 9; ++k) {
				this.addSlotToContainer(new Slot(playerInv, index++, 8 + k * 18, 102 + j * 18 + i));
			}
		}

		for (j = 0; j < 9; ++j) {
			this.addSlotToContainer(new Slot(playerInv, index++, 8 + j * 18, 160 + i));
		}
	}

	@Override
	public boolean canInteractWith(EntityPlayer playerIn) {
		return true;
	}

	public ItemStack transferStackInSlot(EntityPlayer playerIn, int index) {
		ItemStack itemstack = null;
		Slot slot = (Slot) this.inventorySlots.get(index);

		if (slot != null && slot.getHasStack()) {
			ItemStack sourceStack = slot.getStack();
			itemstack = sourceStack.copy();

			if (index < slotSize) {
				if (!this.mergeItemStack(sourceStack, slotSize,
						this.inventorySlots.size(), true)) {
					return null;
				}
			} else if (!this.mergeItemStack(sourceStack, 0, slotSize, false)) {
				return null;
			}

			if (sourceStack.stackSize == 0) {
				slot.putStack((ItemStack) null);
			} else {
				slot.onSlotChanged();
			}
		}

		return itemstack;
	}

	
}
